"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[63355],{98302:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>u});var o=n(85893),i=n(11151);const s={id:"with-navigation-focus",title:"withNavigationFocus",sidebar_label:"withNavigationFocus"},a=void 0,r={id:"with-navigation-focus",title:"withNavigationFocus",description:"withNavigationFocus is a higher order component which passes the isFocused prop into a wrapped component. It's useful if you need to use the focus state in the render function of your screen component or another component rendered somewhere inside of a screen.",source:"@site/versioned_docs/version-4.x/with-navigation-focus.md",sourceDirName:".",slug:"/with-navigation-focus",permalink:"/docs/4.x/with-navigation-focus",draft:!1,unlisted:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-4.x/with-navigation-focus.md",tags:[],version:"4.x",frontMatter:{id:"with-navigation-focus",title:"withNavigationFocus",sidebar_label:"withNavigationFocus"},sidebar:"version-4.x-docs",previous:{title:"withNavigation",permalink:"/docs/4.x/with-navigation"},next:{title:"Scrollables",permalink:"/docs/4.x/scrollables"}},c={},u=[{value:"Example",id:"example",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"withNavigationFocus"})," is a higher order component which passes the ",(0,o.jsx)(t.code,{children:"isFocused"})," prop into a wrapped component. It's useful if you need to use the focus state in the render function of your screen component or another component rendered somewhere inside of a screen."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"withNavigationFocus(Component)"})," returns a component."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"import React from 'react';\nimport { Text } from 'react-native';\nimport { withNavigationFocus } from 'react-navigation';\n\nclass FocusStateLabel extends React.Component {\n  render() {\n    return <Text>{this.props.isFocused ? 'Focused' : 'Not focused'}</Text>;\n  }\n}\n\n// withNavigationFocus returns a component that wraps FocusStateLabel and passes\n// in the navigation prop\nexport default withNavigationFocus(FocusStateLabel);\n"})})]})}function l(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>a});var o=n(67294);const i={},s=o.createContext(i);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);