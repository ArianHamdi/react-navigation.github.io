"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[46524],{4689:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=t(85893),i=t(11151);const r={id:"route-object",title:"Route object reference",sidebar_label:"Route object"},c=void 0,a={id:"route-object",title:"Route object reference",description:"Each screen component in your app is provided with the route object as a prop automatically. The prop contains various information regarding current route (place in navigation hierarchy component lives).",source:"@site/versioned_docs/version-7.x/route-object.md",sourceDirName:".",slug:"/route-object",permalink:"/docs/7.x/route-object",draft:!1,unlisted:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-7.x/route-object.md",tags:[],version:"7.x",frontMatter:{id:"route-object",title:"Route object reference",sidebar_label:"Route object"},sidebar:"docs",previous:{title:"Options for screens",permalink:"/docs/7.x/screen-options"},next:{title:"Navigation object",permalink:"/docs/7.x/navigation-object"}},s={},d=[];function l(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Each ",(0,o.jsx)(n.code,{children:"screen"})," component in your app is provided with the ",(0,o.jsx)(n.code,{children:"route"})," object as a prop automatically. The prop contains various information regarding current route (place in navigation hierarchy component lives)."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"route"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"key"})," - Unique key of the screen. Created automatically or added while navigating to this screen."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"name"})," - Name of the screen. Defined in navigator component hierarchy."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"path"})," - An optional string containing the path that opened the screen, exists when the screen was opened via a deep link."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"params"})," - An optional object containing params which is defined while navigating e.g. ",(0,o.jsx)(n.code,{children:"navigate('Twitter', { user: 'Dan Abramov' })"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)("samp",{id:"route-prop"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"function ProfileScreen({ route }) {\n  return (\n    <View>\n      <Text>This is the profile screen of the app</Text>\n      <Text>{route.name}</Text>\n    </View>\n  );\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>c});var o=t(67294);const i={},r=o.createContext(i);function c(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);